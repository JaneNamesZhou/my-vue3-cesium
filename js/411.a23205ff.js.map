{"version":3,"file":"js/411.a23205ff.js","mappings":"kIAAA,wkD","sources":["webpack://my-vue3-cesium/./src/docs/dashboardIntro.md"],"sourcesContent":["export default \"# 数据可视化大屏：现状、流程与误区分析\\r\\n\\r\\n近年来，数据可视化大屏成为热门话题。大屏不仅能够实时监控关键数据，提升决策效率，还能作为会议室、展厅的亮点，提升企业形象。\\r\\n\\r\\n---\\r\\n\\r\\n## 1. 可视化大屏项目实施流程\\r\\n\\r\\n一般整个大屏开发流程可划分为六个部分：\\r\\n\\r\\n### 01-需求调研\\r\\n\\r\\n这是整个大屏开发中最费时且关键的环节。只有深入了解业务需求，才能设计出真正有价值的大屏。该阶段需要与业务部门充分沟通，明确目标，避免后期大改动。此外，若大屏需要硬件支持，还要调研显示设备、分辨率等技术细节。\\r\\n\\r\\n### 02-原型设计\\r\\n\\r\\n确定要展示的指标和布局，制作指标清单，与业务确认。随后设计图表样式与交互方式（如钻取、联动、轮播等），完成初步原型。\\r\\n\\r\\n### 03-视觉方案设计\\r\\n\\r\\n基于原型，结合屏幕尺寸、分辨率和风格进行美化设计。此阶段要输出包含业务逻辑、技术方案和预期效果的详细蓝图。\\r\\n\\r\\n### 04-实现效果\\r\\n\\r\\n前端团队根据蓝图绘制可交互的 Demo，确保功能和视觉符合预期。\\r\\n\\r\\n### 05-数据处理\\r\\n\\r\\n数据处理通常分为底层采集、前端展示及数据校对。根据数据规模与实时性需求，决定是否建立中间结果表。\\r\\n\\r\\n* 小规模、准实时数据可直接展示\\r\\n* 大规模、复杂计算需构建中间层或流处理方案（如 Kafka + Flink）\\r\\n\\r\\n### 06-大屏调试\\r\\n\\r\\n理想状态下，显卡分辨率和实际硬件匹配，字体可自适应，减少调试工作。但建议在原型设计或效果落地阶段就开始预调试，确保后续顺利。\\r\\n\\r\\n---\\r\\n\\r\\n完整一个项目周期一般在 10-20 人天，有些复杂项目甚至需 1-2 个月，且后期维护工作量大。简单做个“漂亮的大屏”容易，打造实用且稳定的大屏项目则挑战不小。\\r\\n\\r\\n---\\r\\n\\r\\n## 2. 可视化大屏的技术实现方式\\r\\n\\r\\n目前主流前端实现方案主要有三种：\\r\\n\\r\\n### 自主开发\\r\\n\\r\\n基于 Vue、ECharts 等开源框架打造大屏模板，支持动态刷新、响应式布局和图表替换等。后端通常用 Java 实现数据接口。若数据需求复杂，涉及多数据源、高频更新，开发和维护难度显著增加。许多项目最终因维护难度而转向商业解决方案。\\r\\n\\r\\n### 定制化开发\\r\\n\\r\\n针对特殊需求（如 3D 建模），需要专业厂商提供基于三维引擎的定制方案。此类方案效果佳但成本高昂，动辄几十万甚至上百万。\\r\\n\\r\\n### 利用 BI/报表工具\\r\\n\\r\\n报表平台集成了数据读取与前端展示能力。提供丰富可复用的大屏组件和模板，支持拖拽设计，降低开发门槛，节约人力成本。还能与专业建模厂商协作，实现复杂的 3D 交互效果。\\r\\n\\r\\n---\\r\\n\\r\\n## 3. 大屏常见误区\\r\\n\\r\\n### 误区一：效果图就是最终结果\\r\\n\\r\\n网上炫目的效果图很吸引人，但实际落地往往因屏幕分辨率、字体适配和性能限制而有差距。动态效果如 3D 旋转、数据刷新速度等也难以完全还原。\\r\\n\\r\\n### 误区二：大屏只是前端技术\\r\\n\\r\\n很多人忽视了数据来源、数据质量、更新频率、硬件选型等基础环节。大屏项目还需考虑业务指标设计、分析逻辑和系统整体架构，远非简单的前端页面。\\r\\n\\r\\n### 误区三：大屏成本低，开发快\\r\\n\\r\\n实际项目费用往往高昂，单纯硬件成本就动辄十几万。涉及智慧城市、制造业等 3D 需求时，成本更是成倍增加。技术方案从低代码到全代码不等，开发速度和成本取决于业务需求和技术选型。\\r\\n\";"],"names":[],"sourceRoot":""}